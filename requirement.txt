O que fazer?

Criar uma aplica√ß√£o web completa para gerenciamento de tarefas, onde os usu√°rios possam adicionar, editar, excluir e marcar tarefas como conclu√≠das. 

üìå Funcionalidade;

1. CRUD de Tarefas

- Criar, ler, atualizar e deletar tarefas
- Marcar tarefas como conclu√≠das
- Filtrar tarefas por status (pendente/conclu√≠da)

2. Banco de Dados

- Armazenamento das tarefas e usu√°rios em um banco de dados 

3. API REST

- Backend em Node.js com Express.js
- Rotas protegidas para opera√ß√µes CRUD

4. Frontend Interativo

- Interface em React com estiliza√ß√£o usando CSS/Styled Components/Tailwind/bootstrap
- Consumo da API para listar e gerenciar tarefas

5. Dockeriza√ß√£o

Containers para o backend, frontend e banco de dados
- Docker Compose para facilitar a execu√ß√£o
üìå Tecnologias que podem ser utilizadas:

- Frontend: React, JavaScript, CSS (Tailwind , Styled Components, bootstrap)
- Backend: Node.js, Express.js
- Banco de Dados: PostgreSQL
- Autentica√ß√£o: JWT, bcrypt
- APIs: RESTful
- Infraestrutura: Docker, Docker Compose

üìå Extras Opcionais -
Caso queira aperfei√ßoar ainda mais o seu projeto.
- Notifica√ß√µes em tempo real com WebSockets
- Deploy na Vercel (Frontend) e Render (Backend)
- Testes automatizados com Jest

O que entregar na plataforma?

- Link do GitHub
- Documenta√ß√£o do projeto (README explicando setup e funcionalidades)
- Demonstra√ß√£o funcional (via v√≠deo ou deploy)